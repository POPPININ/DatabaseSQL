/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jobcandidatedatabse_ia;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author raghav
 */
public class AddShortlist extends javax.swing.JFrame {

    /**
     * Creates new form AddShortlist
     */
    public AddShortlist() {
        initComponents();
        Show_Shortlist_table();
    }

    // Removed due to privacy concerns
   String driver = "";
   String url = "";
   String user = "";
   String pass = "";
    
   public ArrayList<Users1> userList()
   {
       ArrayList<Users1> usersList = new ArrayList<>();
       try {
           Class.forName(driver);
           Connection con = DriverManager.getConnection(url, user, pass);
           String query1 = "SELECT * FROM SHORTLIST";
           PreparedStatement prepStat = con.prepareStatement(query1);
           ResultSet rs = prepStat.executeQuery();
           Users1 users1;
           
           while(rs.next()){
               users1 = new Users1(rs.getInt(
               "Shortlist_ID"), rs.getInt("Job_ID"), rs.getInt("Candidate_ID"));
               usersList.add(users1);
           }

       } catch (Exception e) {
           JOptionPane.showMessageDialog(null, e);
       }
       
       return usersList;
   }
   
   // following method displays MySQL data into JTable
   public void Show_Shortlist_table(){
       ArrayList<Users1> list = userList();
       DefaultTableModel model = (DefaultTableModel) ShortlistTable.getModel();
       
       Object[] row = new Object[3];
       for(int i = 0; i < list.size(); i++)
       {
           row[0] = list.get(i).getShortlistID();
           row[1] = list.get(i).getJobsID();
           row[2] = list.get(i).getCandsID();
           
           model.addRow((Object[]) row);
       }    
   }
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        ShortlistTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        ShortID = new javax.swing.JTextField();
        JobID = new javax.swing.JTextField();
        CandID = new javax.swing.JTextField();
        BackBut = new javax.swing.JButton();
        DelBut = new javax.swing.JButton();
        SearchNewCan = new javax.swing.JButton();
        ExitBut = new javax.swing.JButton();
        FinList = new javax.swing.JButton();
        ViewFinList = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ShortlistTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Shortlist ID", "Job ID", "Candidate ID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        ShortlistTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ShortlistTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(ShortlistTable);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel1.setText("Candidate Search");

        jLabel2.setText("Shortlist ID:");

        jLabel3.setText("Job ID:");

        jLabel4.setText("Candidate ID:");

        ShortID.setBackground(new java.awt.Color(204, 255, 204));

        JobID.setBackground(new java.awt.Color(204, 255, 204));

        CandID.setBackground(new java.awt.Color(204, 255, 204));

        BackBut.setBackground(new java.awt.Color(255, 204, 204));
        BackBut.setText("Back");
        BackBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButActionPerformed(evt);
            }
        });

        DelBut.setBackground(new java.awt.Color(255, 204, 204));
        DelBut.setText("Delete");
        DelBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DelButActionPerformed(evt);
            }
        });

        SearchNewCan.setBackground(new java.awt.Color(255, 204, 204));
        SearchNewCan.setText("Search New Candidates");
        SearchNewCan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchNewCanActionPerformed(evt);
            }
        });

        ExitBut.setBackground(new java.awt.Color(255, 204, 204));
        ExitBut.setText("Exit");
        ExitBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitButActionPerformed(evt);
            }
        });

        FinList.setBackground(new java.awt.Color(255, 204, 204));
        FinList.setText("Add To Final List");
        FinList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FinListActionPerformed(evt);
            }
        });

        ViewFinList.setBackground(new java.awt.Color(255, 204, 204));
        ViewFinList.setText("View Final List");
        ViewFinList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewFinListActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(BackBut)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(82, 82, 82))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ShortID, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(JobID, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CandID, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(DelBut)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(SearchNewCan))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ExitBut)
                                .addGap(18, 18, 18)
                                .addComponent(FinList)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ViewFinList)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(BackBut))
                .addGap(63, 63, 63)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(ShortID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JobID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CandID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DelBut)
                    .addComponent(SearchNewCan))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ExitBut)
                    .addComponent(FinList)
                    .addComponent(ViewFinList))
                .addContainerGap(66, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ExitButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitButActionPerformed
        System.exit(0);
    }//GEN-LAST:event_ExitButActionPerformed

    private void BackButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButActionPerformed
        // redirects user to main menu 
        this.setVisible(false);
        LoginWindow logwin = new LoginWindow();
        logwin.setVisible(true);
    }//GEN-LAST:event_BackButActionPerformed

    private void SearchNewCanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchNewCanActionPerformed
        MakeShortlist makeShort = new MakeShortlist();
        makeShort.setVisible(true);
    }//GEN-LAST:event_SearchNewCanActionPerformed

    private void DelButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DelButActionPerformed
        // deletes shortlisted candidate and job
        try {
            Class.forName(driver);
            Connection con = DriverManager.getConnection(url, user, pass);
            int row = ShortlistTable.getSelectedRow();
            String value = (ShortlistTable.getValueAt(row, 0).toString());
            String query = "DELETE FROM SHORTLIST where SHORTLIST_ID=" + value;
            PreparedStatement prepStat = con.prepareStatement(query); 
            prepStat.executeUpdate();
            DefaultTableModel model = (DefaultTableModel) ShortlistTable.getModel();
            model.setRowCount(0);
            Show_Shortlist_table();
            JOptionPane.showMessageDialog(null, "Record deleted.");
            
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_DelButActionPerformed

    private void ShortlistTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ShortlistTableMouseClicked
        // loads selected fields into table
        DefaultTableModel model = (DefaultTableModel) ShortlistTable.getModel();
        int selectedRow = ShortlistTable.getSelectedRow();
        
        ShortID.setText(model.getValueAt(selectedRow, 0).toString());
        JobID.setText(model.getValueAt(selectedRow, 1).toString());
        CandID.setText(model.getValueAt(selectedRow, 2).toString());                   
    }//GEN-LAST:event_ShortlistTableMouseClicked

    private void FinListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FinListActionPerformed
       // displays selected rows into a finalised Jtable
         try {
            Class.forName(driver);
            Connection con = DriverManager.getConnection(url, user, pass);
            String query2 = "insert into FINAL_LIST (SHORTLIST_ID, JOB_ID, CANDIDATE_ID)"
                    + "values(?, ?, ?)";
            
            PreparedStatement prepStat = con.prepareStatement(query2);
            prepStat.setString(1, ShortID.getText());
            prepStat.setString(2, JobID.getText());
            prepStat.setString(3, CandID.getText());
                       
            prepStat.executeUpdate();
            
            // refresh table
            FinalList finList = new FinalList();
            DefaultTableModel model2 = (DefaultTableModel) finList.finListTable.getModel();
            model2.setRowCount(0);
            finList.Show_Final_table();
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_FinListActionPerformed

    private void ViewFinListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewFinListActionPerformed
        FinalList finList = new FinalList();
        finList.setVisible(true);
    }//GEN-LAST:event_ViewFinListActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddShortlist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddShortlist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddShortlist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddShortlist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddShortlist().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackBut;
    private javax.swing.JTextField CandID;
    private javax.swing.JButton DelBut;
    private javax.swing.JButton ExitBut;
    private javax.swing.JButton FinList;
    private javax.swing.JTextField JobID;
    private javax.swing.JButton SearchNewCan;
    private javax.swing.JTextField ShortID;
    private javax.swing.JTable ShortlistTable;
    private javax.swing.JButton ViewFinList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
